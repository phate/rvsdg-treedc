# Creates a heuristic test based on the blueprint file and the given input:
# filename of test/dotfile, graph6 string, lower bound, and upper bound of graph
# will overwrite existing autogenerated tests

import sys

def blueprint():
    with open("../test/heuristics/heuristic_blueprint") as f:
        return f.read().splitlines()

def create_test(blueprint, fname, graph, lb, ub):

    finput =  "../test/heuristics/dot_files/{}.dot".format(fname)
    foutput = "../test/heuristics/tests/{}.cpp".format(fname)

    print("Creating heuristic test from {} in {}".format(finput, foutput))

    with open(foutput, 'w') as f:
        def wr(s):
            f.write(s + "\n")

        for line in blueprint:
            def match(s):
                return line.strip().startswith(s)

            if match("SUITE"):
                wr(line.format(fname))

            elif match("char graph6"):
                wr(line.format(graph))

            elif match("G = graph"):
                wr(line.format(finput))

            elif match("int upper_bound"):
                wr(line.format(ub))

            elif match("int lower_bound"):
                wr(line.format(lb))

            else:
                wr(line)

if __name__ == "__main__":
    argc = len(sys.argv) - 1
    if argc == 4:
        create_test(blueprint(), *sys.argv[1:])
    else:
        print("Expected 4 args but got {}".format(argc))
