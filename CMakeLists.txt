cmake_minimum_required(VERSION 3.13)

project (rvsdg-treedc CXX)
add_subdirectory(xml_parser)

# compileflags
set(CMAKE_CSS_FLAGS "${CMAKE_CSS_FLAGS}" -Wall -Wextra -Wpedantic -std=c++17)
set(CMAKE_BUILD_TYPE Debug)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

# set output directory
set (CMAKE_RUNTIME_OUTPUT_DIRECTORY "${PROJECT_SOURCE_DIR}/bin")

# set root directory
add_definitions( -DROOT_DIR="${PROJECT_SOURCE_DIR}" )

# Add files
include_directories(include)
file (GLOB_RECURSE PROJECT_HEADERS include/*.h)
file (GLOB_RECURSE PROJECT_SOURCES src/*.cpp)
file (GLOB_RECURSE PROJECT_TESTS   test/unittests.cpp)

# set main as output executable
add_compile_options(${CMAKE_CSS_FLAGS})
add_executable (${PROJECT_NAME} ${PROJECT_SOURCES} ${PROJECT_TESTS})
set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)

# add std::filesystem
target_link_libraries(${PROJECT_NAME} stdc++fs)

# unittest-cpp
find_package(UnitTest++ REQUIRED)
include_directories(${UTPP_INCLUDE_DIRS})
target_link_libraries(${PROJECT_NAME} UnitTest++)

# Tests generated by gen_test.sh
if (TESTS)
    set(TEST_TARGET heuristic_tests)
    file (GLOB_RECURSE PROJECT_TESTS_HEURISTICS test/*.cpp)
    add_executable(${TEST_TARGET} ${PROJECT_SOURCES} ${PROJECT_TESTS_HEURISTICS})
    target_link_libraries(${TEST_TARGET} UnitTest++)
    target_link_libraries(${TEST_TARGET} stdc++fs)
endif()
